# Workflow based on https://github.com/joncloud/makensis-action-test/blob/publish/.github/workflows/main.yml

name: SlimeVR Windows Web Installer

on:
  push:
    branches:
      - main
      - offline-progressive
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    env:
      # The directory of the web installer project
      WINDOWS_WEB_DIR: ${{ github.workspace }}/windows/web
      PLUGINS_DIR: ${{ github.workspace }}/NSIS_Plugins
      WINDOWS_OFFLINE_FILES_DIR: ${{ github.workspace }}/windows/web/offline-files
      GH_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Create plugins directory for NSIS
        run: mkdir -p "${{ env.PLUGINS_DIR }}" | cp -rl "${{ env.WINDOWS_WEB_DIR }}/plugins"/*/* "${{ env.PLUGINS_DIR }}/"
        shell: bash

      - name: Restore cached offline installer files
        uses: actions/cache@v4
        with:
          path: ${{ env.WINDOWS_OFFLINE_FILES_DIR }}
          key: ${{ runner.os }}-${{ hashFiles('**/download_offline_files.ps1') }}
          restore-keys: ${{ runner.os }}-

      - name: Download offline installer files
        run: ."${{ env.WINDOWS_WEB_DIR }}/download_offline_files.ps1"
        shell: pwsh

      - name: Create NSIS installer
        uses: joncloud/makensis-action@v4.1
        with:
          script-file: ${{ env.WINDOWS_WEB_DIR }}/slimevr_web_installer.nsi
          additional-plugin-paths: ${{ env.PLUGINS_DIR }}

      - name: Compute installer hashes
        run: ."${{ env.WINDOWS_WEB_DIR }}/manifest-hashes.ps1"
        shell: pwsh

      - name: Upload the installer as a build artifact
        uses: actions/upload-artifact@v4
        with:
          # Artifact name
          name: "slimevr_web_installer" # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: |
            ${{ env.WINDOWS_WEB_DIR }}/slimevr_web_installer.exe
            ${{ env.WINDOWS_WEB_DIR }}/installer_manifest.txt
